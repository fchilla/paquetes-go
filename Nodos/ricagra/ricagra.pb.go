// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: ricagra.proto

package ricagra

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prioridad int64 `protobuf:"varint,1,opt,name=prioridad,proto3" json:"prioridad,omitempty"`
	Time      int64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	IdNodo    int64 `protobuf:"varint,2,opt,name=idNodo,proto3" json:"idNodo,omitempty"`
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ricagra_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ricagra_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_ricagra_proto_rawDescGZIP(), []int{0}
}

func (x *WriteRequest) GetPrioridad() int64 {
	if x != nil {
		return x.Prioridad
	}
	return 0
}

func (x *WriteRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *WriteRequest) GetIdNodo() int64 {
	if x != nil {
		return x.IdNodo
	}
	return 0
}

type WriteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prioridad int64 `protobuf:"varint,1,opt,name=prioridad,proto3" json:"prioridad,omitempty"`
	Time      int64 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	IdNodo    int64 `protobuf:"varint,2,opt,name=idNodo,proto3" json:"idNodo,omitempty"`
	Ack       bool  `protobuf:"varint,3,opt,name=ack,proto3" json:"ack,omitempty"`
}

func (x *WriteReply) Reset() {
	*x = WriteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ricagra_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteReply) ProtoMessage() {}

func (x *WriteReply) ProtoReflect() protoreflect.Message {
	mi := &file_ricagra_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteReply.ProtoReflect.Descriptor instead.
func (*WriteReply) Descriptor() ([]byte, []int) {
	return file_ricagra_proto_rawDescGZIP(), []int{1}
}

func (x *WriteReply) GetPrioridad() int64 {
	if x != nil {
		return x.Prioridad
	}
	return 0
}

func (x *WriteReply) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *WriteReply) GetIdNodo() int64 {
	if x != nil {
		return x.IdNodo
	}
	return 0
}

func (x *WriteReply) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

var File_ricagra_proto protoreflect.FileDescriptor

var file_ricagra_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x69, 0x63, 0x61, 0x67, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x72, 0x69, 0x63, 0x61, 0x67, 0x72, 0x61, 0x22, 0x58, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x64, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x64, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64,
	0x4e, 0x6f, 0x64, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x64, 0x4e, 0x6f,
	0x64, 0x6f, 0x22, 0x68, 0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x64, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x64, 0x61, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x4e, 0x6f, 0x64, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x64, 0x4e, 0x6f, 0x64, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x32, 0x49, 0x0a, 0x07,
	0x52, 0x69, 0x63, 0x41, 0x67, 0x72, 0x61, 0x12, 0x3e, 0x0a, 0x0e, 0x45, 0x6e, 0x76, 0x69, 0x61,
	0x72, 0x50, 0x65, 0x74, 0x69, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x72, 0x69, 0x63, 0x61,
	0x67, 0x72, 0x61, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x72, 0x69, 0x63, 0x61, 0x67, 0x72, 0x61, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x72, 0x69, 0x63,
	0x61, 0x67, 0x72, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ricagra_proto_rawDescOnce sync.Once
	file_ricagra_proto_rawDescData = file_ricagra_proto_rawDesc
)

func file_ricagra_proto_rawDescGZIP() []byte {
	file_ricagra_proto_rawDescOnce.Do(func() {
		file_ricagra_proto_rawDescData = protoimpl.X.CompressGZIP(file_ricagra_proto_rawDescData)
	})
	return file_ricagra_proto_rawDescData
}

var file_ricagra_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ricagra_proto_goTypes = []interface{}{
	(*WriteRequest)(nil), // 0: ricagra.WriteRequest
	(*WriteReply)(nil),   // 1: ricagra.WriteReply
}
var file_ricagra_proto_depIdxs = []int32{
	0, // 0: ricagra.RicAgra.EnviarPeticion:input_type -> ricagra.WriteRequest
	1, // 1: ricagra.RicAgra.EnviarPeticion:output_type -> ricagra.WriteReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ricagra_proto_init() }
func file_ricagra_proto_init() {
	if File_ricagra_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ricagra_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ricagra_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ricagra_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ricagra_proto_goTypes,
		DependencyIndexes: file_ricagra_proto_depIdxs,
		MessageInfos:      file_ricagra_proto_msgTypes,
	}.Build()
	File_ricagra_proto = out.File
	file_ricagra_proto_rawDesc = nil
	file_ricagra_proto_goTypes = nil
	file_ricagra_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RicAgraClient is the client API for RicAgra service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RicAgraClient interface {
	EnviarPeticion(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteReply, error)
}

type ricAgraClient struct {
	cc grpc.ClientConnInterface
}

func NewRicAgraClient(cc grpc.ClientConnInterface) RicAgraClient {
	return &ricAgraClient{cc}
}

func (c *ricAgraClient) EnviarPeticion(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteReply, error) {
	out := new(WriteReply)
	err := c.cc.Invoke(ctx, "/ricagra.RicAgra/EnviarPeticion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RicAgraServer is the server API for RicAgra service.
type RicAgraServer interface {
	EnviarPeticion(context.Context, *WriteRequest) (*WriteReply, error)
}

// UnimplementedRicAgraServer can be embedded to have forward compatible implementations.
type UnimplementedRicAgraServer struct {
}

func (*UnimplementedRicAgraServer) EnviarPeticion(context.Context, *WriteRequest) (*WriteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarPeticion not implemented")
}

func RegisterRicAgraServer(s *grpc.Server, srv RicAgraServer) {
	s.RegisterService(&_RicAgra_serviceDesc, srv)
}

func _RicAgra_EnviarPeticion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RicAgraServer).EnviarPeticion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ricagra.RicAgra/EnviarPeticion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RicAgraServer).EnviarPeticion(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RicAgra_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ricagra.RicAgra",
	HandlerType: (*RicAgraServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnviarPeticion",
			Handler:    _RicAgra_EnviarPeticion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ricagra.proto",
}
