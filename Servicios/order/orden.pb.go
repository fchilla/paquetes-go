// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: orden.proto

package order

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrdenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPaquete   string `protobuf:"bytes,1,opt,name=idPaquete,proto3" json:"idPaquete,omitempty"`
	Tipo        string `protobuf:"bytes,2,opt,name=tipo,proto3" json:"tipo,omitempty"`
	Producto    string `protobuf:"bytes,3,opt,name=producto,proto3" json:"producto,omitempty"`
	Valor       int32  `protobuf:"varint,4,opt,name=valor,proto3" json:"valor,omitempty"`
	Tienda      string `protobuf:"bytes,5,opt,name=tienda,proto3" json:"tienda,omitempty"`
	Destino     string `protobuf:"bytes,6,opt,name=destino,proto3" json:"destino,omitempty"`
	Prioritario int32  `protobuf:"varint,7,opt,name=prioritario,proto3" json:"prioritario,omitempty"`
}

func (x *OrdenRequest) Reset() {
	*x = OrdenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orden_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdenRequest) ProtoMessage() {}

func (x *OrdenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orden_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdenRequest.ProtoReflect.Descriptor instead.
func (*OrdenRequest) Descriptor() ([]byte, []int) {
	return file_orden_proto_rawDescGZIP(), []int{0}
}

func (x *OrdenRequest) GetIdPaquete() string {
	if x != nil {
		return x.IdPaquete
	}
	return ""
}

func (x *OrdenRequest) GetTipo() string {
	if x != nil {
		return x.Tipo
	}
	return ""
}

func (x *OrdenRequest) GetProducto() string {
	if x != nil {
		return x.Producto
	}
	return ""
}

func (x *OrdenRequest) GetValor() int32 {
	if x != nil {
		return x.Valor
	}
	return 0
}

func (x *OrdenRequest) GetTienda() string {
	if x != nil {
		return x.Tienda
	}
	return ""
}

func (x *OrdenRequest) GetDestino() string {
	if x != nil {
		return x.Destino
	}
	return ""
}

func (x *OrdenRequest) GetPrioritario() int32 {
	if x != nil {
		return x.Prioritario
	}
	return 0
}

type OrdenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seguimiento int32 `protobuf:"varint,1,opt,name=seguimiento,proto3" json:"seguimiento,omitempty"`
}

func (x *OrdenReply) Reset() {
	*x = OrdenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orden_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdenReply) ProtoMessage() {}

func (x *OrdenReply) ProtoReflect() protoreflect.Message {
	mi := &file_orden_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdenReply.ProtoReflect.Descriptor instead.
func (*OrdenReply) Descriptor() ([]byte, []int) {
	return file_orden_proto_rawDescGZIP(), []int{1}
}

func (x *OrdenReply) GetSeguimiento() int32 {
	if x != nil {
		return x.Seguimiento
	}
	return 0
}

var File_orden_proto protoreflect.FileDescriptor

var file_orden_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x50, 0x61, 0x71, 0x75, 0x65,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x50, 0x61, 0x71, 0x75,
	0x65, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x65,
	0x6e, 0x64, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x65, 0x6e, 0x64,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x22, 0x2e, 0x0a,
	0x0a, 0x4f, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x67, 0x75, 0x69, 0x6d, 0x69, 0x65, 0x6e, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x65, 0x67, 0x75, 0x69, 0x6d, 0x69, 0x65, 0x6e, 0x74, 0x6f, 0x32, 0x42, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69,
	0x61, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x6e, 0x12, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orden_proto_rawDescOnce sync.Once
	file_orden_proto_rawDescData = file_orden_proto_rawDesc
)

func file_orden_proto_rawDescGZIP() []byte {
	file_orden_proto_rawDescOnce.Do(func() {
		file_orden_proto_rawDescData = protoimpl.X.CompressGZIP(file_orden_proto_rawDescData)
	})
	return file_orden_proto_rawDescData
}

var file_orden_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_orden_proto_goTypes = []interface{}{
	(*OrdenRequest)(nil), // 0: order.OrdenRequest
	(*OrdenReply)(nil),   // 1: order.OrdenReply
}
var file_orden_proto_depIdxs = []int32{
	0, // 0: order.Ordenes.EnviarOrden:input_type -> order.OrdenRequest
	1, // 1: order.Ordenes.EnviarOrden:output_type -> order.OrdenReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_orden_proto_init() }
func file_orden_proto_init() {
	if File_orden_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orden_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orden_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orden_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orden_proto_goTypes,
		DependencyIndexes: file_orden_proto_depIdxs,
		MessageInfos:      file_orden_proto_msgTypes,
	}.Build()
	File_orden_proto = out.File
	file_orden_proto_rawDesc = nil
	file_orden_proto_goTypes = nil
	file_orden_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrdenesClient is the client API for Ordenes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdenesClient interface {
	EnviarOrden(ctx context.Context, in *OrdenRequest, opts ...grpc.CallOption) (*OrdenReply, error)
}

type ordenesClient struct {
	cc grpc.ClientConnInterface
}

func NewOrdenesClient(cc grpc.ClientConnInterface) OrdenesClient {
	return &ordenesClient{cc}
}

func (c *ordenesClient) EnviarOrden(ctx context.Context, in *OrdenRequest, opts ...grpc.CallOption) (*OrdenReply, error) {
	out := new(OrdenReply)
	err := c.cc.Invoke(ctx, "/order.Ordenes/EnviarOrden", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdenesServer is the server API for Ordenes service.
type OrdenesServer interface {
	EnviarOrden(context.Context, *OrdenRequest) (*OrdenReply, error)
}

// UnimplementedOrdenesServer can be embedded to have forward compatible implementations.
type UnimplementedOrdenesServer struct {
}

func (*UnimplementedOrdenesServer) EnviarOrden(context.Context, *OrdenRequest) (*OrdenReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarOrden not implemented")
}

func RegisterOrdenesServer(s *grpc.Server, srv OrdenesServer) {
	s.RegisterService(&_Ordenes_serviceDesc, srv)
}

func _Ordenes_EnviarOrden_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdenesServer).EnviarOrden(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Ordenes/EnviarOrden",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdenesServer).EnviarOrden(ctx, req.(*OrdenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ordenes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.Ordenes",
	HandlerType: (*OrdenesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnviarOrden",
			Handler:    _Ordenes_EnviarOrden_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orden.proto",
}
